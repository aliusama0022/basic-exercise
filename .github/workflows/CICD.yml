name: Full DevOps Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  issues:
    types: [opened]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  handle-issues:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Output issue event details
        run: echo "${{ toJson(github.event) }}"
      # Optional: auto-create a follow-up issue
      # - name: Create a follow-up issue
      #   uses: peter-evans/create-issue@v4
      #   with:
      #     title: "Follow-up: Issue #${{ github.event.issue.number }} opened"
      #     body: |
      #       A new issue was just opened by @${{ github.event.issue.user.login }}.
      #       Please review and take action.

  lint:
    if: github.event_name != 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

  test:
    if: github.event_name != 'issues'
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  build-and-push:
    if: github.event_name != 'issues'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Build code
        run: npm run build

      - name: Deploy
        run: echo "Deploying to production..."
